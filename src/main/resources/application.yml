server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3307/tama
    username: the2792
    password: canyou12

  mvc:
    view:
      prefix: /templates/
      suffix: .mustache

  jpa:
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: 574711615042-27q1qqj4ur7tkvma0f13s0m5cq4v32ih.apps.googleusercontent.com
            client-secret: _dR_g-ojb9DF_Z9_ckMiSUAP
            scope:
              - email
              - profile
          facebook:
            client-id: 688671045171774
            client-secret: f08ab86980751a1868911361e27316ae
            scope:
              - email
              - public_profile
          naver:
            client-id: qG9Z6AKNSPQxFTDvMY91
            client-secret: _pM4zfz2ze
            scope:
              - name
              - email
            client-name: Naver
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        provider: # naver 는 기본 provider 에 등록되지 않았기 때문에 이와 같이 등록해준다.
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize  # 이 주소로 접근하면 네이버 로그인 창이 뜬다. (html)
            token-uri: https://nid.naver.com/oauth2.0/token # token 요청
            user-info-uri: https://openapi.naver.com/v1/nid/me # profile 정보를 받으려면 요청해야 하는 주소
            user-name-attribute: response # 회원정보를 json 으로 받는데, response 라는 키값으로 네이버가 리턴해줌